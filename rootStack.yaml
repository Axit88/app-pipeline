AWSTemplateFormatVersion: "2010-09-09"
Description: Creating root stack, that will create nested stacks.

Parameters:
  BucketName:
    Type: String
    Default: axitsamplepipelinebucket
  Environment: 
    Type: String
    Default: dev 

Resources:
  VpcNestedStack:
    Type: AWS::CloudFormation::Stack
    DependsOn: OUPolicyNestedStack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/vpc/createVpc.yaml
      Parameters:
        EnvironmentName: !Sub ${Environment}
        VpcCIDR: 10.0.0.0/16
        PublicSubnet1CIDR: 10.0.0.0/20
        PublicSubnet2CIDR: 10.0.16.0/20
        PrivateSubnet1CIDR: 10.0.128.0/20
        PrivateSubnet2CIDR: 10.0.144.0/20

  # All Data Stores
  
  EcsNestedStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/ecs/ecs.yaml
      Parameters:
        ClusterName: !Sub ${Environment}ecs-cluster 
        TaskDefinitionFamilyName: !Sub ${Environment}default-ecs-task-family
        ContainerName:  !Sub ${Environment}default-python-container
        ContainerImage: 803928384365.dkr.ecr.ap-northeast-1.amazonaws.com/python:latest
        ContainerPort: 5000
        EcsServiceName: !Sub ${Environment}default-ecs-service
        EcsTaskExecutionRoleName: !Sub ${Environment}EcsTaskExecutionRole
        EcsSecurityGroupName: !Sub ${Environment}EcsSecurityGroup
        Subnet1: 
          Fn::GetAtt:
            - VpcNestedStack
            - Outputs.PublicSubnet1
        Subnet2: 
          Fn::GetAtt:
            - VpcNestedStack
            - Outputs.PublicSubnet2
        VpcId: 
          Fn::GetAtt:
            - VpcNestedStack
            - Outputs.VPC

# All Serverless Infra And Workflows

  LambdaNestedStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/lambda/lambdaFunction.yaml
      Parameters:
        S3Bucket: axitsamplepipelinebucket
        S3Key: archive.zip
        LambdaFunctionName: !Sub ${Environment}nested-lambda-function
        RoleName: !Sub ${Environment}nested-lambda-role
        Runtime: go1.x
        Handler: main
        LambdaSecurityGroup: !Sub ${Environment}LambdaSecurityGroup
        VpcId: 
           Fn::GetAtt:
            - VpcNestedStack
            - Outputs.VPC
        Subnet: 
           Fn::GetAtt:
            - VpcNestedStack
            - Outputs.PrivateSubnet1
        SNSTopic: !ImportValue SnsTopic

  ApiGatewayNestedStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/apiGateway/apiGateway.yaml
      Parameters:
        ApiGatewayName: !Sub ${Environment}nested-api-gateway
        ApiGatewayStageName: test
        ApiGatewayHTTPMethod: POST
        LambdaFunctionArn:
          Fn::GetAtt:
            - LambdaNestedStack
            - Outputs.LambdaFunctionArn
        LambdaFunctionName:
          Fn::GetAtt:
            - LambdaNestedStack
            - Outputs.LambdaFunctionName
        SNSTopic: !ImportValue SnsTopic

# All EC2 Related Infra

  Ec2NestedStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: !Sub https://${BucketName}.s3.${AWS::Region}.amazonaws.com/ec2/instance.yaml
      Parameters:
        InstanceName: !Sub ${Environment}NewEc2Instance
        ImageId: ami-06fdbb60c8e83aa5e
        InstanceType: t2.micro
        Ec2SecurityGroupName: !Sub ${Environment}ec2-security-group
        VolumeSize: 8
        InstanceProfileName: !Sub ${Environment}InstanceProfilForEc2 
        RoleName: !Sub ${Environment}IamEc2RoleForSSM
        Device1: /dev/xvda 
        Device2: /dev/xvdb  
        VolumeType: gp2
        SNSTopic: !ImportValue SnsTopic 
        VpcId: 
          Fn::GetAtt:
            - VpcNestedStack
            - Outputs.VPC
        Subnet:
          Fn::GetAtt:
            - VpcNestedStack
            - Outputs.PublicSubnet1
  