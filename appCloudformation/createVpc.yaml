Description:  This template deploys a VPC, with a pair of public and private subnets spread across two Availability Zones. 

Parameters:
  EnvironmentName:
    Description: An environment name that is prefixed to resource names
    Type: String
    Default: test
    
  VpcCIDR:
    Description: Please enter the IP range (CIDR notation) for this VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone
    Type: String
    Default: 10.0.0.0/20

  PublicSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone
    Type: String
    Default: 10.0.16.0/20

  PrivateSubnet1CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the first Availability Zone
    Type: String
    Default: 10.0.128.0/20

  PrivateSubnet2CIDR:
    Description: Please enter the IP range (CIDR notation) for the private subnet in the second Availability Zone
    Type: String
    Default: 10.0.144.0/20

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
        - Key: env 
          Value: integration 
        - Key: application 
          Value: vpc 

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)
        - Key: env 
          Value: integration 
        - Key: application 
          Value: subnet 

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)
        - Key: env 
          Value: integration 
        - Key: application 
          Value: subnet 

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)
        - Key: env 
          Value: integration 
        - Key: application 
          Value: subnet 

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs  '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)
        - Key: env 
          Value: integration 
        - Key: application 
          Value: subnet 

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName} Private Routes

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupName: !Sub ${EnvironmentName}vpcSecurityGroup 
      GroupDescription: Security group with ingress rule
      VpcId: !Ref VPC 
      Tags:
        - Key: env 
          Value: integration 
        - Key: application 
          Value: vpc 
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: "0.0.0.0/0"  
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: "0.0.0.0/0"

# Outputs:
#   VPC:
#     Description: A reference to the created VPC
#     Value: !Ref VPC 
#     Export:
#       Name: VPC

#   PrivateRouteTable:
#     Description: A reference to the created PrivateRouteTable
#     Value: !Ref PrivateRouteTable 
#     Export:
#       Name: PrivateRouteTable

#   PublicSubnets:
#     Description: A list of the public subnets
#     Value: !Join [ ",", [ !Ref PublicSubnet1, !Ref PublicSubnet2 ]]

#   PrivateSubnets:
#     Description: A list of the private subnets
#     Value: !Join [ ",", [ !Ref PrivateSubnet1, !Ref PrivateSubnet2 ]]

#   PublicSubnet1:
#     Description: A reference to the public subnet in the 1st Availability Zone
#     Value: !Ref PublicSubnet1
#     Export:
#       Name: PublicSubnet1

#   PublicSubnet2:
#     Description: A reference to the public subnet in the 2nd Availability Zone
#     Value: !Ref PublicSubnet2
#     Export:
#       Name: PublicSubnet2

#   PrivateSubnet1:
#     Description: A reference to the private subnet in the 1st Availability Zone
#     Value: !Ref PrivateSubnet1
#     Export:
#       Name: PrivateSubnet1

#   PrivateSubnet2:
#     Description: A reference to the private subnet in the 2nd Availability Zone
#     Value: !Ref PrivateSubnet2
#     Export:
#       Name: PrivateSubnet2

#   InternetGateway:
#     Description: A reference to the InternetGateway
#     Value: !Ref InternetGateway
#     Export:
#       Name: InternetGateway

#   SecurityGroup:
#     Description: Security group with no ingress rule
#     Value: !Ref SecurityGroup   
#     Export:
#       Name: SecurityGroup


#aws cloudformation create-stack --stack-name vpc --template-body file://createVpc.yaml --capabilities CAPABILITY_NAMED_IAM --disable-rollback

#aws cloudformation update-stack --stack-name vpc --template-body file://createVpc.yaml --capabilities CAPABILITY_NAMED_IAM --disable-rollback 
